# -*- mode: sh; -*-

normal="\[\e[0m\]"
echo_cyan="\033[0;36m"

bold_purple="\[\e[35;1m\]"
echo_bold_purple="\033[35;1m"
echo_orange="\033[0;91m"

echo_bold_red="\033[31;1m"
echo_red="\033[0;31m"

echo_yellow="\033[0;33m"
echo_bold_yellow="\033[33;1m"

echo_bold_green="\033[32;1m"
echo_green="\033[0;32m"



color_dir=$echo_cyan
color_par=$echo_bold_purple
color_branch_ok=$echo_yellow
color_branch_dirty=$echo_orange
color_mod=$echo_yellow
color_add=$echo_green
color_unt=$echo_orange

if [ -n "$SSH_CLIENT" ] || [ -n "$SSH_TTY" ]; then
    color_par=$echo_bold_red
fi

repo_branch() {
    git -C $groot branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/'
}

repo_isnot_dirty() {
    git -C $groot diff --quiet && git diff --cached --quiet
}

repo_root() {

    if [ "`git rev-parse --is-inside-work-tree 2>/dev/null`" = "true" ]; then
        git rev-parse --show-toplevel
    elif [ "`git rev-parse --is-inside-git-dir 2>/dev/null`" = "true" ]; then
        dirname "$(git rev-parse --absolute-git-dir)"
    else
        echo -n ""
    fi
}

repo_string() {
    local groot="`repo_root`"
    if [ "${groot}" != "" ]; then
        local branch="$(repo_branch)"
        if [ -n "$branch" ]; then
            branch=" $branch"
        fi

        local gstatus="$(git -C ${groot} status --porcelain --untracked)"

        local nuntack=$(echo "$gstatus" | grep -E '^\?\?' | wc -l)
        if [ $nuntack -gt 0 ]; then
            nuntack=" ${nuntack}U"
        else
            nuntack=""
        fi

        if repo_isnot_dirty; then
            echo -e -n  "${color_par}[${color_branch_ok}${branch}${color_unt}${nuntack} ${color_par}]"
        else

            local nmod=$(echo "$gstatus" | grep -E '^ M' | wc -l)
            if [ $nmod -gt 0 ]; then
                nmod=" ${nmod}M"
            else
                nmod=""
            fi

            local nmods=$(echo "$gstatus" | grep -E '^A' | wc -l)
            if [ $nmods -gt 0 ]; then
                nmods=" ${nmods}S"
            else
                nmods=""
            fi

            echo -e -n "${color_par}[${color_branch_dirty}${branch}${color_add}${nmods}${color_mod}${nmod}${color_unt}${nuntack} ${color_par}]"
        fi
    else
        echo -n ""
    fi
}


## virtualenv
function virtualenv_info(){
    # Get Virtual Env
    if [[ -n "$VIRTUAL_ENV" ]]; then
        # Strip out the path and just leave the env name
        venv="${VIRTUAL_ENV##*/}"
    else
        # In case you don't have one activated
        venv=''
    fi
    [[ -n "$venv" ]] && echo -e -n "${color_par}[ ${echo_bold_green}venv ${echo_green}$venv ${color_par}]"
}


PS1=$(echo "\n${color_par}┌─[$color_dir \w ${color_par}]\$(repo_string)\$(virtualenv_info)\n${color_par}└─▪${normal} ")
